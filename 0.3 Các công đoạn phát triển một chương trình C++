Ở bài trước, chúng ta đã cùng nhau tìm hiểu C++ là gì, nó được dùng cho mục đích gì... Các bạn xem đến bài này nghĩa là 
các bạn đã xác định được phần nào hướng đi trong tương lai, hi vọng các bạn có thể theo đuổi đến cùng với lựa chọn của mình.

Trong bài học này, chúng ta thảo luận về các bước để phát triển ra một chương trình C++ trước khi các bạn bắt đầu với chương trình 
đầu tiên của mình.

Một chương trình máy tính (phần mềm) được tạo ra nhằm được sử dụng trong một hoặc một vài mục đích cụ thể nào đó (Thống kê, dạy học, 
y tế, để giải trí,... hay thậm chí phần mềm được tạo ra để hổ trợ lập trình viên tạo ra những phần mềm).
Viết một chương trình là một công đoạn nhỏ trong quá trình sản xuất phần mềm (vì một phần mềm thường là tập hợp của nhiều 
chương trình nhỏ) nhưng nó cũng được thực hiện thông qua những công đoạn tương tự như phát triển một phần mềm lớn.

http://www.learncpp.com/images/CppTutorial/Section0/Development.png (Hình 0.3.0)
(hình vẽ miêu tả các công đoạn phát triển một chương trình)

Các bước cụ thể là:
- Xác định vấn đề cần giải quyết.
- Thiết kế giải pháp (chọn nền tảng phát triển, chọn ngôn ngữ, chọn công cụ, xác định thuật toán cho chương trình...).
- Viết chương trình thực hiện theo giải pháp đã đề ra.
- Biên dịch chương trình (chuyển đổi mã lập trình về mã máy).
- Liên kết các file đã được biên dịch.
- Chạy chương trình, kiểm tra và sửa lỗi cho chương trình.

Đối với một số lập trình viên chuyển nghiệp (hoặc do vấn đề cần giải quyết quá đơn giản), người ta có thể thực hiện nhanh bước 1, 2 và 
bắt tay vào viết chương trình ngay lập tức. Mục tiêu của khóa học này cũng bao gồm rèn luyện tư duy giúp bạn phát triển khả năng tự giải 
quyết vấn đề của riêng mình.

Chúng ta bắt đầu làm rõ từng bước trong quá trình phát triển chương trình phần mềm (hay cụ thể là chương trình C++).

- Bước 1: Xác định vấn đề cần giải quyết.
Công đoạn này quyết định phần lớn đến việc chương trình của bạn được thực hiện một cách khó khăn hay dễ dàng. Nhưng trên lý thuyết, nó 
khá đơn giản. Tất cả những gì bạn cần là một ý tưởng có thể dễ dàng xác định. 
Để dễ hiểu hơn, chúng ta cùng đặt một câu hỏi: Bạn đang gặp phải vấn đề gì?
Mình xin đưa ra một số tình huống cụ thể:
  + Mình muốn có một chương trình cho phép nhập vào năm sinh, sau đó tính ra số tuổi hiện tại của bạn. (Hình 0.3.1)
  + Mình muốn viết một chương trình tìm ra đường đi ngắn nhất để đi từ nhà đến trường. (Hình 0.3.2)
  + Mình cần một chương trình giúp mình hoàn tất đống sổ sách một cách nhanh chóng hơn. (Hình 0.3.3)
  
Trên đây là ba trường hợp ngẫu nhiên mình nghĩ đến vì mình cần dùng nó trong cuộc sống. Vì mình cần máy tính giúp mình giải quyết 
những thứ tương tự như trên, nên mình đã xác định vấn đề của riêng mình. Cùng xem thử mình đã xác định được nó bằng cách nào.

  + Trường hợp 1: Mình muốn có một chương trình cho phép nhập vào năm sinh, sau đó tính ra số tuổi hiện tại của bạn. (Hình 0.3.1)
    Có lẽ đây là một vấn đề quá đơn giản so với một số người, nhưng trước khi làm cho máy tính hiểu được vấn đề, bản thân chúng ta 
    phải hiểu được vấn đề trước. 
    Mình đã tự đặt câu hỏi với bản thân là: "Hiện tại, mình đang cần biết điều gì?". 
    Sau đó mình tự trả lời với bản thân là: "Mình muốn biết năm nay mình bao nhiêu tuổi".
    
  + Trường hợp 2: Mình muốn viết một chương trình tìm ra đường đi ngắn nhất để đi từ nhà đến trường. (Hình 0.3.2)
    Câu hỏi mình tự đặt ra: "Làm thế nào để tiết kiệm xăng bây giờ?"
    Tự trả lời luôn: "Để kiếm coi đường nào ngắn nhất để đi tới trường mới được".
    
  + Trường hợp 3: Mình cần một chương trình giúp mình hoàn tất đống sổ sách một cách nhanh chóng hơn. (Hình 0.3.3)
    Câu hỏi: "Với cái đống sổ sách này, làm sao mình có thể dành thời gian đi chơi với gấu được?"
    Trả lời: "Phải tìm cách để quản lý nó thôi, tiện thể đưa cho máy tính làm luôn cho khỏe".

Có thể trong cuộc sống các bạn gặp phải những vấn đề không giống với mình đưa ra ở trên. Có thể đó là một bài toán khó, 
một trường hợp khó giải quyết, và bạn cần cái máy tính của bạn giúp đỡ, đó là lúc mà bạn phải tự tìm ra câu trả lời cho bản thân.

- Bước 2: Thiết kế giải pháp

